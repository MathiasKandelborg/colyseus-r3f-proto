/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, Select } from "@react-three/drei";
import { useState } from "react";
import { useEffect } from "react";
export default function GltfLoader(props) {
  const group = useRef();
  const [selected, setSelected] = useState([])
  const { nodes, materials } = useGLTF("/models/MathClass_V3.gltf");
  const [hovered, setHover] = useState(false)
  
  const onClick = (e) => {
    setSelected(e.target)
    console.log(e)
  }
  return (
    <group ref={group} {...props} dispose={null}>
      <Select box onChange={(e) => onClick(e) }  >
      <mesh
        castShadow
        receiveShadow
        onPointerOver={(e) => (e.stopPropagation(), setHover(true))}
        onPointerOut={(e) => setHover(false)}
        name = "Cuboid_Formula"
        geometry={nodes.Cuboid_Hitbox.geometry}
        material={nodes.Cuboid_Hitbox.material}
        position={[0.67, 1.82, 2.99]}
        
        
      />
      <mesh
        castShadow
        receiveShadow
        name = "Cylinder_Formula"
        geometry={nodes.Cylinder_Hitbox.geometry}
        material={nodes.Cylinder_Hitbox.material}
        position={[-0.77, 1.24, 2.99]}
      />
      <mesh
        castShadow
        receiveShadow
        name = "Parallelepiped_Formula"
        geometry={nodes.Parallelepiped_Hitbox.geometry}
        material={nodes.Parallelepiped_Hitbox.material}
        position={[-0.78, 1.81, 2.99]}
      />
      <mesh
        castShadow
        receiveShadow
        name = "Box_Formula"
        geometry={nodes.Box_Hitbox.geometry}
        material={nodes.Box_Hitbox.material}
        position={[-0.06, 1.81, 2.99]}
      />
      <mesh
        castShadow
        receiveShadow
        name = "Pyramid_Formula"
        geometry={nodes.Pyramid_Hitbox.geometry}
        material={nodes.Pyramid_Hitbox.material}
        position={[0.67, 1.26, 2.99]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Curtains.geometry}
        material={materials.Curtains}
      />
      </Select>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Blackboard.geometry}
        material={materials["Material.008"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Environment.geometry}
        material={materials.Material}
        position={[0, -1.54, 0]}
        rotation={[0, 0.05, 0]}
        scale={139.2}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.MathRoom.geometry}
        material={materials.Room}
      />
      
    </group>
    
  );
}

useGLTF.preload("/models/MathClass_V3.gltf");
